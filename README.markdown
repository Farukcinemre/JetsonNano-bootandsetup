# üöÄ Jetson Nano Boot & Setup Guide üåü

Welcome to the ultimate guide for unlocking the full potential of your **Jetson Nano**! This comprehensive, step-by-step tutorial will guide you through resetting, configuring, and optimizing your Jetson Nano for cutting-edge deep learning tasks. From booting via SSD to installing **YOLOv5** for real-time object detection, this guide is crafted for both beginners and seasoned developers. Let‚Äôs embark on this exciting journey to supercharge your Jetson Nano! üéâ

---

## üîÑ Resetting Your Jetson Nano

To reset your Jetson Nano and prepare it for deep learning, we‚Äôll start by setting up a virtual machine with **Ubuntu Linux** on your computer (Figure 1). This establishes a robust foundation for a clean and efficient setup.

> **‚ö†Ô∏è Critical Note:** You **must** use **Ubuntu 18.04**, as other versions are incompatible with the Jetson Nano.

**Download Link:** [1] https://releases.ubuntu.com/18.04/

![Figure 1: Downloading Ubuntu 18.04](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/ubuntu%20versiyon%2018.04%20indirme.png)

Once Ubuntu is installed, download the **Nvidia SDK Manager** on the virtual machine (Figure 2). Visit the link below, select the ‚Äú**.deb Ubuntu**‚Äù option, and log in or sign up for an Nvidia account to proceed. Without an account, the installation will fail.

**Link:** [2] https://developer.nvidia.com/drive/sdk-manager

![Figure 2: Nvidia SDK Manager Download](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/nvidia%20jetson%20nano%20indirme.png)

Navigate to the download directory in Ubuntu, open a terminal, and run:

```bash
sudo dpkg -i nvidiasdkmanager.deb
```

If an error occurs, resolve it with:

```bash
sudo apt --fix-broken install
```

Retry the `dpkg` command‚Äîit should now work flawlessly.

Launch the **Nvidia SDK Manager** to access the login screen (Figure 3). After logging in, a user-friendly interface will appear.

![Figure 3: Nvidia SDK Manager Login](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/nvidia%20log%20in%20ekran%C4%B1.png)

Select your **Jetson Nano model** under the ‚Äú**Target Hardware**‚Äù section (Figure 4). Choosing the correct model ensures compatibility.

![Figure 4: Selecting Your Jetson Nano Model](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/jetson%20nano%20modelleri%20se%C3%A7im%20ekran%C4%B1%20.png)

Check the box for **DeepStream** under ‚Äú**ADDITIONAL SDKS**‚Äù and proceed to **Step 2** (Figure 5).

![Figure 5: DeepStream Selection](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/download%20ve%20install%20ekran%C4%B1.png)

In **Step 2**, accept the privacy policy. Choose between:
- **Download now. Install later**: Downloads files for manual installation.
- **Direct Download and Install**: Performs immediate installation (this may take time).

Select **Manual Setup** instead of ‚ÄúAutomatic Setup - Jetson Nano‚Äù (Figure 6).

![Figure 6: Manual Setup Selection](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/manuel%20setup%20jetson%20nano.png)

Enter a new **username** and **password** for the Jetson Nano, then click **Finish** to continue.

The **SDK Components** screen (Figure 7) allows you to install essential software like **CUDA**, **CUDA X-AI**, and **OpenCV** for deep learning and image processing.

![Figure 7: SDK Components Installation](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/jetson%20nano%20paketleri%20y%C3%BCkleme%20.png)

Choose your installation method:
1. **USB Connection**: The virtual machine shares its internet via USB. Keep the IP address unchanged.
2. **Ethernet Connection**: Use a USB Wi-Fi adapter, enter the Jetson Nano‚Äôs IP address, and proceed.

Upon completion, the Jetson Nano will have the necessary deep learning libraries and will boot automatically. Connect it to a monitor to access the login screen and enter your credentials.

> **üí° Pro Tip:** Skipping the installation requires manual library installation via the Jetson Nano‚Äôs terminal. Find detailed instructions here: [3] https://github.com/55selcukozdemir/web_self-car/blob/main/README.md

![Figure 8: Jetson Nano Models](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/jetson%20nano%20modelleri.png)

As shown in Figure 8, Jetson Nano has three models: **Jetson Nano**, **Jetson Nano (Developer Kit)**, and **Jetson Nano (2GB Developer Kit)**.

- **SD Card Models**: A 64GB SD card offers sufficient storage for deep learning libraries.
- **Non-SD Card Models (4GB RAM, 16GB Internal Storage)**: Internal storage is inadequate, so use an external device (e.g., hard disk, SSD, or flash drive). An **SSD** is recommended for superior performance, as flash drives and hard disks are slower.

---

## üíæ Booting from an SSD

**Reference Video:** [4] https://youtu.be/53rRMr1IpWs

To boot from an SSD, clone the required repository:

```bash
git clone https://github.com/JetsonHacksNano/bootFromUSB.git
```

Navigate to the repository:

```bash
cd bootFromUSB
```

![Figure 9: Disks Application](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/diskler.png)

Format the SSD (Figure 9). Search for ‚Äú**disks**‚Äù and open the Disks application (Figure 10).

![Figure 10: Selecting the SSD](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/ssd.png)

Select the SSD, click the three-line menu, and choose **Format Disk** (Figure 11). Set partitioning to **GPT** (Figure 12), then confirm (Figure 13).

![Figure 11: Format Disk Option](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/format.png)

![Figure 12: GPT Partitioning](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/GPT.png)

![Figure 13: Format Confirmation](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/areyousure.png)

Create a new partition by clicking the **+** button (Figure 14).

![Figure 14: Creating a New Partition](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/%2Bssd.jpg)

Partition the SSD, name it, and select **Internal disk for use with Linux systems only (Ext4)** under ‚ÄúType‚Äù (Figure 15). Click **Create** to finalize (Figure 16).

![Figure 15: Partitioning the SSD](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/disk%20b%C3%B6lme.png)

![Figure 16: Ext4 Partition Type](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/ext4.png)

Verify the SSD:

```bash
ls /dev/sda*
```

Copy system files to the SSD:

```bash
./copyRootToUSB.sh -p /dev/sda1
```

Navigate to the SSD‚Äôs **boot/extlinux** directory and open a terminal:

```bash
sudo cp extlinux.conf extlinux.conf.original
```

Edit the **extlinux.conf** file:

```bash
sudo gedit extlinux.conf
```

![Figure 17: Editing extlinux.conf](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/extlinuxconfig.png)

Copy the marked section, paste it below, and replace ‚Äúprimary‚Äù with ‚Äúsdcard‚Äù (Figure 18).

![Figure 18: Modifying extlinux.conf](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/sdcard.png)

Update the root partition for SSD booting:

```bash
./partUUID.sh
```

![Figure 19: Finding the SSD PARTUUID](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/partuuid.png)

Copy the ‚Äú**root=PARTUUID=...**‚Äù string and paste it into the ‚Äúroot‚Äù section of the primary entry in **extlinux.conf** (Figure 20).

![Figure 20: Updating the Root Partition](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/root.png)

> **‚ö†Ô∏è Note:** The PARTUUID (e.g., ‚Äúroot=PARTUUID=d75abef0-345f-4f10-b327-5927034572e1‚Äù) is unique to your SSD. Ensure you use the correct value.

Save and close **extlinux.conf** with **Ctrl+S**.

### üåü SD Card Supported Jetson Nano

For SD card-supported models, shut down the Jetson Nano, ensure no SD card is inserted, and power it on. Verify the boot:

```bash
lsblk
```

![Figure 21: Verifying SSD Boot](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/lsblk.png)

If ‚Äú**/**‚Äù appears next to **sda1**, the SSD boot is successful.

### üåü Non-SD Card Supported Jetson Nano

For models without SD card support, delete all system files from internal storage. The device will shut down. Restart with the SSD connected to boot from it. Verify with:

```bash
lsblk
```

Ensure ‚Äú**/**‚Äù appears next to **sda1**.

---

## üñºÔ∏è Installing YOLOv5 on Jetson Nano

**Reference Video:** [5] https://youtu.be/oKaLyow7hWU

Let‚Äôs harness the power of **YOLOv5** for real-time object detection! Clone the YOLOv5 repository:

```bash
git clone https://github.com/ultralytics/yolov5.git
```

Navigate to the **yolov5** directory and review the **requirements.txt** file for required libraries. We‚Äôll install **OpenCV 4.1.1** (not 4.1.2 as listed) without pip to optimize GPU performance with CUDA.

### üéØ Step 1: Install OpenCV

> **Note:** Skip this step if OpenCV was installed via Nvidia SDK Manager.

Clone the OpenCV repository:

```bash
git clone https://github.com/JetsonHacksNano/buildOpenCV.git
```

Navigate to **buildOpenCV** and set ‚Äú**NUM_JOBS**‚Äù to 1 for non-SD card models (Figure 22).

![Figure 22: Modifying NUM_JOBS](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/num_jobs.png)

Save the file and run:

```bash
cd buildOpenCV
./buildOpenCV
```

### üéØ Step 2: Install Additional Libraries

Install **python3-pip**:

```bash
sudo apt install python3-pip
```

Install the required libraries:

```bash
pip3 install -U PyYAML==5.3.1
pip3 install tqdm
pip3 install cython
pip3 install -U numpy==1.18.5
sudo apt install build-essential libssl-dev python3-dev
pip3 install cycler==0.10
pip3 install kiwisolver==1.3.1
pip3 install pyparsing==2.4.7
pip3 install python-dateutil==2.8.2
pip3 install --no-deps matplotlib==3.2.2
sudo apt install gfortran
sudo apt install libopenblas-dev
sudo apt install liblapack-dev
pip3 install scipy==1.4.1
sudo apt install libjpeg-dev
pip3 install pillow==8.3.2
pip3 install typing-extensions==3.10.0.2
```

### üéØ Step 3: Install PyTorch and Torchvision

The Jetson Nano‚Äôs ARM architecture requires a specialized PyTorch installation. Follow Nvidia‚Äôs forum instructions: [6] https://forums.developer.nvidia.com/t/pytorch-for-jetson/72048

![Figure 23: PyTorch Versions](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/torchvision.png)

Select **PyTorch 1.10** for Python 3.6 (Figure 24).

![Figure 24: PyTorch and Torchvision Compatibility](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/python%20torchvision.png)

Download the PyTorch wheel file (Figure 25):

```bash
wget https://nvidia.box.com/shared/static/p57jwntv436lfrd78inwl7iml6p13fzh.whl -O torch-1.10.0-cp36-cp36m-linux_aarch64.whl
```

Install dependencies:

```bash
sudo apt-get install python3-pip libopenblas-base libopenmpi-dev libomp-dev
```

Install the PyTorch wheel file:

```bash
pip3 install --no-deps torch-1.10.0-cp36-cp36m-linux_aarch64.whl
```

Install **Torchvision**:

```bash
sudo apt-get install libjpeg-dev zlib1g-dev libpython3-dev libavcodec-dev libavformat-dev libswscale-dev
git clone --branch v0.11.1 https://github.com/pytorch/vision torchvision
cd torchvision
export BUILD_VERSION=0.9.0
python3 setup.py install --user
```

Install **Seaborn**:

```bash
pip3 install --no-deps seaborn==0.11.0
```

Test YOLOv5:

```bash
cd yolov5
python3 detect.py --source data/images --weights yolov5s.pt
```

![Figure 26: YOLOv5 Test Results](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/sonu.png)

The pretrained **yolov5s.pt** model accurately detects objects like people and buses (Figure 26).

### üì∑ RealSense Library for Real-Time Processing

For real-time image processing, install the **RealSense SDK**:

```bash
git clone https://github.com/jetsonhacks/installRealSenseSDK.git
cd installRealSenseSDK
```

Edit **buildLibrealsense**, replacing ‚Äú**NUM_PROCS**‚Äù with 1 (Figure 27).

![Figure 27: Modifying NUM_PROCS](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/num_proc.png)

Run the build script:

```bash
./buildLibrealsense.sh
```

Verify the installation:

```bash
python3
import pyrealsense2
```

If an error occurs (Figure 28), update the Python path.

![Figure 28: Pyrealsense Error](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/pyrealsense.png)

Edit **.bashrc**, changing **/usr/local/lib** to **/usr/local/lib/python3.6/pyrealsense2** (Figure 29).

![Figure 29: Updating Python Path](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/pythonpath.png)

Apply changes:

 []./installRealSenseSDK
./buildLibrealsense.sh
```

Verify again:

```bash
python3
import pyrealsense2 as rs
```

A successful import moves to the next line (Figure 30).

![Figure 30: Successful Pyrealsense Import](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/pyrealsense2.png)

Install **libcanberra-gtk**:

```bash
sudo apt install libcanberra-gtk*
```

### üé• Camera Testing with YOLOv5

Run real-time detection:

```bash
cd yolov5
python detect.py --weights yolov5s.pt --source 0
```

The **.pt** file contains the trained model. The **yolov5s.pt** tests pretrained models for objects like people and computers. For the **Teknofest Agricultural Unmanned Vehicle CORE Team**, we trained a custom **.pt** file to detect and spray foreign plants (Figure 31).

![Figure 31: Custom YOLOv5 Detection](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/yabanci-bitki.jpg)

---

## üìö References

1. https://releases.ubuntu.com/18.04/
2. https://developer.nvidia.com/drive/sdk-manager  
   https://youtu.be/0nplGFQ07po
3. https://github.com/55selcukozdemir/web_self-car/blob/main/README.md
4. https://youtu.be/53rRMr1IpWs
5. https://youtu.be/oKaLyow7hWU
6. https://forums.developer.nvidia.com/t/pytorch-for-jetson/72048

---

# üåü JetsonNano-bootandsetup (T√ºrk√ße)

## üîÑ JETSON NANO SIFIRLAMA

Jetson Nano‚Äôyu sƒ±fƒ±rlamak ve derin √∂ƒürenme projelerine hazƒ±rlamak i√ßin bir sanal makine kuruyoruz ve bu makineye **Ubuntu Linux** y√ºkl√ºyoruz (≈ûekil 1). Bu, temiz ve verimli bir kurulumun temelini olu≈üturur.

> **‚ö†Ô∏è √ñnemli Not:** **Ubuntu 18.04** s√ºr√ºm√ºn√º indirmelisiniz; diƒüer s√ºr√ºmler Jetson Nano ile uyumlu deƒüildir.

**ƒ∞ndirme Linki:** [1] https://releases.ubuntu.com/18.04/

![≈ûekil 1: Ubuntu 18.04 ƒ∞ndirme](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/ubuntu%20versiyon%2018.04%20indirme.png)

Ubuntu y√ºklendikten sonra, sanal makineye **Nvidia SDK Manager**‚Äôƒ± indirin (≈ûekil 2). A≈üaƒüƒ±daki linkten ‚Äú**.deb Ubuntu**‚Äù se√ßeneƒüini se√ßin ve Nvidia hesabƒ±yla giri≈ü yapƒ±n veya kaydolun. Hesap olmadan kurulum √ßalƒ±≈ümaz.

**Link:** [2] https://developer.nvidia.com/drive/sdk-manager

![≈ûekil 2: Nvidia SDK Manager ƒ∞ndirme](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/nvidia%20jetson%20nano%20indirme.png)

ƒ∞ndirme dizinine gidin, terminal a√ßƒ±n ve ≈üu komutu √ßalƒ±≈ütƒ±rƒ±n:

```bash
sudo dpkg -i nvidiasdkmanager.deb
```

Hata alƒ±rsanƒ±z:

```bash
sudo apt --fix-broken install
```

`dpkg` komutunu tekrar deneyin; artƒ±k sorunsuz √ßalƒ±≈üacaktƒ±r.

**Nvidia SDK Manager**‚Äôƒ± ba≈ülatƒ±n. Giri≈ü ekranƒ± g√∂r√ºnecek (≈ûekil 3). Giri≈ü yaptƒ±ktan sonra kullanƒ±cƒ± dostu aray√ºz a√ßƒ±lƒ±r.

![≈ûekil 3: Nvidia SDK Manager Giri≈ü](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/nvidia%20log%20in%20ekran%C4%B1.png)

‚Äú**Target Hardware**‚Äù b√∂l√ºm√ºnden **Jetson Nano modelinizi** se√ßin (≈ûekil 4). Doƒüru model se√ßimi uyumluluk i√ßin kritiktir.

![≈ûekil 4: Jetson Nano Model Se√ßimi](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/jetson%20nano%20modelleri%20se%C3%A7im%20ekran%C4%B1%20.png)

‚Äú**ADDITIONAL SDKS**‚Äù altƒ±nda **DeepStream** kutusunu i≈üaretleyin ve **2. Adƒ±m**‚Äôa ge√ßin (≈ûekil 5).

![≈ûekil 5: DeepStream Se√ßimi](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/download%20ve%20install%20ekran%C4%B1.png)

**2. Adƒ±m**‚Äôda gizlilik politikasƒ±nƒ± kabul edin. Se√ßenekler:
- **Download now. Install later**: Dosyalarƒ± indirir, manuel kurulum i√ßin saklar.
- **Doƒürudan ƒ∞ndir ve Kur**: Hemen kurulum yapar (uzun s√ºrebilir).

‚Äú**Automatic Setup - Jetson Nano**‚Äù yerine **Manual Setup**‚Äôƒ± se√ßin (≈ûekil 6).

![≈ûekil 6: Manuel Kurulum Se√ßimi](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/manuel%20setup%20jetson%20nano.png)

Jetson Nano i√ßin yeni **kullanƒ±cƒ± adƒ±** ve **≈üifre** girin, ardƒ±ndan **Finish**‚Äôe tƒ±klayƒ±n.

**SDK Components** ekranƒ± (≈ûekil 7), **CUDA**, **CUDA X-AI**, ve **OpenCV** gibi derin √∂ƒürenme ve g√∂r√ºnt√º i≈üleme yazƒ±lƒ±mlarƒ±nƒ± y√ºklemenizi saƒülar.

![≈ûekil 7: SDK Components Y√ºkleme](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/jetson%20nano%20paketleri%20y%C3%BCkleme%20.png)

Kurulum y√∂ntemi se√ßin:
1. **USB Baƒülantƒ±sƒ±**: Sanal makine internetini USB ile payla≈üƒ±r. IP adresini deƒüi≈ütirmeyin.
2. **Ethernet Baƒülantƒ±sƒ±**: USB Wi-Fi adapt√∂r√º kullanƒ±n, Jetson Nano‚Äônun IP adresini girin ve devam edin.

Kurulum tamamlandƒ±ƒüƒ±nda, Jetson Nano derin √∂ƒürenme k√ºt√ºphanelerini y√ºklemi≈ü olacak ve otomatik olarak a√ßƒ±lacaktƒ±r. Giri≈ü ekranƒ±nƒ± g√∂rmek i√ßin monit√∂re baƒülayƒ±n ve kimlik bilgilerinizi girin.

> **üí° ƒ∞pucu:** Kurulumu atlarsanƒ±z, k√ºt√ºphaneleri Jetson Nano terminalinden manuel y√ºklemeniz gerekir. Ayrƒ±ntƒ±lƒ± talimatlar: [3] https://github.com/55selcukozdemir/web_self-car/blob/main/README.md

![≈ûekil 8: Jetson Nano Modelleri](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/jetson%20nano%20modelleri.png)

≈ûekil 8‚Äôde g√∂r√ºld√ºƒü√º gibi, Jetson Nano‚Äônun √º√ß modeli vardƒ±r: **Jetson Nano**, **Jetson Nano (Developer Kit)**, ve **Jetson Nano (2GB Developer Kit)**.

- **SD Kart Modelleri**: 64GB SD kart, derin √∂ƒürenme k√ºt√ºphaneleri i√ßin yeterli depolama saƒülar.
- **SD Kart Desteksiz Modeller (4GB RAM, 16GB Dahili Depolama)**: Dahili depolama yetersizdir; harici bir cihaz (sabit disk, SSD veya flash bellek) kullanƒ±n. En iyi performans i√ßin **SSD** √∂nerilir.

## üíæ SSD'den √ñny√ºkleme

**Yararlanƒ±lan Video:** [4] https://youtu.be/53rRMr1IpWs

SSD‚Äôden √∂ny√ºkleme i√ßin gerekli depoyu kopyalayƒ±n:

```bash
git clone https://github.com/JetsonHacksNano/bootFromUSB.git
```

Depoya gidin:

```bash
cd bootFromUSB
```

![≈ûekil 9: Diskler Uygulamasƒ±](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/diskler.png)

SSD‚Äôyi formatlayƒ±n (≈ûekil 9). ‚Äú**disks**‚Äù aramasƒ± yapƒ±n ve Diskler uygulamasƒ±nƒ± a√ßƒ±n (≈ûekil 10).

![≈ûekil 10: SSD Se√ßimi](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/ssd.png)

SSD‚Äôyi se√ßin, √º√ß √ßizgili men√ºden **Format Disk**‚Äôi se√ßin (≈ûekil 11). B√∂l√ºmlemeyi **GPT** yapƒ±n (≈ûekil 12) ve formatƒ± onaylayƒ±n (≈ûekil 13).

![≈ûekil 11: Disk Formatlama](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/format.png)

![≈ûekil 12: GPT B√∂l√ºmleme](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/GPT.png)

![≈ûekil 13: Format Onayƒ±](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/areyousure.png)

**+** d√ºƒümesine tƒ±klayarak yeni bir b√∂l√ºm olu≈üturun (≈ûekil 14).

![≈ûekil 14: Yeni B√∂l√ºm Olu≈üturma](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/%2Bssd.jpg)

SSD‚Äôyi b√∂l√ºn, isim verin ve ‚ÄúType‚Äù altƒ±nda **Internal disk for use with Linux systems only (Ext4)** se√ßin (≈ûekil 15). **Create** ile tamamlayƒ±n (≈ûekil 16).

![≈ûekil 15: SSD B√∂l√ºmleme](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/disk%20b%C3%B6lme.png)

![≈ûekil 16: Ext4 B√∂l√ºm T√ºr√º](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/ext4.png)

SSD‚Äôyi kontrol edin:

```bash
ls /dev/sda*
```

Sistem dosyalarƒ±nƒ± SSD‚Äôye kopyalayƒ±n:

```bash
./copyRootToUSB.sh -

 /dev/sda1
```

SSD‚Äônin **boot/extlinux** dizinine gidin ve terminal a√ßƒ±n:

```bash
sudo cp extlinux.conf extlinux.conf.original
```

**extlinux.conf** dosyasƒ±nƒ± d√ºzenleyin:

```bash
sudo gedit extlinux.conf
```

![≈ûekil 17: extlinux.conf D√ºzenleme](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/extlinuxconfig.png)

ƒ∞≈üaretli b√∂l√ºm√º kopyalayƒ±n, altƒ±na yapƒ±≈ütƒ±rƒ±n ve ‚Äúprimary‚Äù kƒ±smƒ±nƒ± ‚Äúsdcard‚Äù ile deƒüi≈ütirin (≈ûekil 18).

![≈ûekil 18: extlinux.conf G√ºncelleme](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/sdcard.png)

SSD‚Äôden √∂ny√ºkleme i√ßin root kƒ±smƒ±nƒ± g√ºncelleyin:

```bash
./partUUID.sh
```

![≈ûekil 19: SSD PARTUUID Bulma](https://github.com/Farukcinemre/Jet„Åè„Å™„Çä„Åæ„Åô

**≈ûekil 19: SSD PARTUUID Bulma](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/partuuid.png)

‚Äú**root=PARTUUID=...**‚Äù dizesini kopyalayƒ±n ve **extlinux.conf**‚Äôdaki primary giri≈üinin ‚Äúroot‚Äù kƒ±smƒ±na yapƒ±≈ütƒ±rƒ±n (≈ûekil 20).

![≈ûekil 20: Root B√∂l√ºm√ºn√º G√ºncelleme](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/root.png)

> **‚ö†Ô∏è Not:** PARTUUID (√∂r. ‚Äúroot=PARTUUID=d75abef0-345f-4f10-b327-5927034572e1‚Äù) SSD‚Äônize √∂zeldir. Doƒüru deƒüeri kullanƒ±n.

**extlinux.conf**‚Äôu **Ctrl+S** ile kaydedip kapatƒ±n.

### üåü SD Kart Destekli Jetson Nano

SD kart destekli modellerde, Jetson Nano‚Äôyu kapatƒ±n, SD kartƒ±n takƒ±lƒ± olmadƒ±ƒüƒ±ndan emin olun ve a√ßƒ±n. √ñny√ºklemeyi kontrol edin:

```bash
lsblk
```

![≈ûekil 21: SSD √ñny√ºkleme Doƒürulama](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/lsblk.png)

**sda1** yanƒ±nda ‚Äú**/**‚Äù g√∂r√ºn√ºyorsa, SSD √∂ny√ºklemesi ba≈üarƒ±lƒ±dƒ±r.

### üåü SD Kart Desteksiz Jetson Nano

SD kart desteƒüi olmayan modellerde, dahili depolamadaki t√ºm sistem dosyalarƒ±nƒ± silin. Cihaz kapanacaktƒ±r. SSD takƒ±lƒ±yken yeniden ba≈ülatƒ±n; SSD‚Äôden √∂ny√ºkleme yapacaktƒ±r. Doƒürulayƒ±n:

```bash
lsblk
```

**sda1** yanƒ±nda ‚Äú**/**‚Äù olduƒüundan emin olun.

## üñºÔ∏è Jetson Nano‚Äôya YOLOv5 Kurulumu

**Yararlanƒ±lan Video:** [5] https://youtu.be/oKaLyow7hWU

Ger√ßek zamanlƒ± nesne algƒ±lama i√ßin **YOLOv5**‚Äôi kuralƒ±m! Depoyu kopyalayƒ±n:

```bash
git clone https://github.com/ultralytics/yolov5.git
```

**yolov5** dizinine gidin ve **requirements.txt** dosyasƒ±nƒ± inceleyin. **OpenCV 4.1.1**‚Äôi (listede 4.1.2 olarak g√∂r√ºnse de) pip olmadan kuracaƒüƒ±z, b√∂ylece CUDA ile GPU performansƒ±nƒ± maksimize edeceƒüiz.

### üéØ 1. Adƒ±m: OpenCV Y√ºkleme

> **Not:** OpenCV‚Äôyi Nvidia SDK Manager ile y√ºklediyseniz bu adƒ±mƒ± atlayƒ±n.

OpenCV deposunu kopyalayƒ±n:

```bash
git clone https://github.com/JetsonHacksNano/buildOpenCV.git
```

**buildOpenCV** dizinine gidin ve SD kart destekli olmayan modeller i√ßin ‚Äú**NUM_JOBS**‚Äù deƒüerini 1 yapƒ±n (≈ûekil 22).

![≈ûekil 22: NUM_JOBS D√ºzenleme](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/num_jobs.png)

Dosyayƒ± kaydedin ve √ßalƒ±≈ütƒ±rƒ±n:

```bash
cd buildOpenCV
./buildOpenCV
```

### üéØ 2. Adƒ±m: Ek K√ºt√ºphaneleri Y√ºkleme

**python3-pip**‚Äôi y√ºkleyin:

```bash
sudo apt install python3-pip
```

Gerekli k√ºt√ºphaneleri y√ºkleyin:

```bash
pip3 install -U PyYAML==5.3.1
pip3 install tqdm
pip3 install cython
pip3 install -U numpy==1.18.5
sudo apt install build-essential libssl-dev python3-dev
pip3 install cycler==0.10
pip3 install kiwisolver==1.3.1
pip3 install pyparsing==2.4.7
pip3 install python-dateutil==2.8.2
pip3 install --no-deps matplotlib==3.2.2
sudo apt install gfortran
sudo apt install libopenblas-dev
sudo apt install liblapack-dev
pip3 install scipy==1.4.1
sudo apt install libjpeg-dev
pip3 install pillow==8.3.2
pip3 install typing-extensions==3.10.0.2
```

### üéØ 3. Adƒ±m: PyTorch ve Torchvision Y√ºkleme

Jetson Nano‚Äônun ARM mimarisi √∂zel bir PyTorch kurulumu gerektirir. Nvidia forumundaki talimatlarƒ± takip edin: [6] https://forums.developer.nvidia.com/t/pytorch-for-jetson/72048

![≈ûekil 23: PyTorch S√ºr√ºmleri](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/torchvision.png)

Python 3.6 i√ßin **PyTorch 1.10**‚Äôu se√ßin (≈ûekil 24).

![≈ûekil 24: PyTorch ve Torchvision Uyumluluƒüu](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/python%20torchvision.png)

PyTorch wheel dosyasƒ±nƒ± indirin (≈ûekil 25):

```bash
wget https://nvidia.box.com/shared/static/p57jwntv436lfrd78inwl7iml6p13fzh.whl -O torch-1.10.0-cp36-cp36m-linux_aarch64.whl
```

Baƒüƒ±mlƒ±lƒ±klarƒ± y√ºkleyin:

```bash
sudo apt-get install python3-pip libopenblas-base libopenmpi-dev libomp-dev
```

PyTorch wheel dosyasƒ±nƒ± y√ºkleyin:

```bash
pip3 install --no-deps torch-1.10.0-cp36-cp36m-linux_aarch64.whl
```

**Torchvision**‚Äôƒ± y√ºkleyin:

```bash
sudo apt-get install libjpeg-dev zlib1g-dev libpython3-dev libavcodec-dev libavformat-dev libswscale-dev
git clone --branch v0.11.1 https://github.com/pytorch/vision torchvision
cd torchvision
export BUILD_VERSION=0.9.0
python3 setup.py install --user
```

**Seaborn**‚Äôu y√ºkleyin:

```bash
pip3 install --no-deps seaborn==0.11.0
```

YOLOv5‚Äôi test edin:

```bash
cd yolov5
python3 detect.py --source data/images --weights yolov5s.pt
```

![≈ûekil 26: YOLOv5 Test Sonu√ßlarƒ±](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/sonu.png)

√ñnceden eƒüitilmi≈ü **yolov5s.pt** modeli, insanlar ve otob√ºs gibi nesneleri doƒüru bir ≈üekilde algƒ±ladƒ± (≈ûekil 26).

### üì∑ Ger√ßek Zamanlƒ± ƒ∞≈üleme i√ßin RealSense K√ºt√ºphanesi

Ger√ßek zamanlƒ± g√∂r√ºnt√º i≈üleme i√ßin **RealSense SDK**‚Äôyƒ± y√ºkleyin:

```bash
git clone https://github.com/jetsonhacks/installRealSenseSDK.git
cd installRealSenseSDK
```

**buildLibrealsense** dosyasƒ±nƒ± d√ºzenleyin, ‚Äú**NUM_PROCS**‚Äù deƒüerini 1 yapƒ±n (≈ûekil 27).

![≈ûekil 27: NUM_PROCS D√ºzenleme](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/num_proc.png)

Derleme komutunu √ßalƒ±≈ütƒ±rƒ±n:

```bash
./buildLibrealsense.sh
```

Y√ºklemeyi doƒürulayƒ±n:

```bash
python3
import pyrealsense2
```

Hata alƒ±rsanƒ±z (≈ûekil 28), Python yolunu g√ºncelleyin.

![≈ûekil 28: Pyrealsense Hata](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/pyrealsense.png)

**.bashrc** dosyasƒ±nƒ± d√ºzenleyin, **/usr/local/lib**‚Äôi **/usr/local/lib/python3.6/pyrealsense2** ile deƒüi≈ütirin (≈ûekil 29).

![≈ûekil 29: Python Yolu G√ºncelleme](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/pythonpath.png)

Deƒüi≈üiklikleri uygulayƒ±n:

```bash
source ~/.bashrc
```

Tekrar doƒürulayƒ±n:

```bash
python3
import pyrealsense2 as rs
```

Alt satƒ±ra ge√ßerse kurulum ba≈üarƒ±lƒ±dƒ±r (≈ûekil 30).

![≈ûekil 30: Ba≈üarƒ±lƒ± Pyrealsense ƒ∞√ße Aktarma](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/pyrealsense2.png)

**libcanberra-gtk**‚Äôyƒ± y√ºkleyin:

```bash
sudo apt install libcanberra-gtk*
```

### üé• Kamera ile YOLOv5 Testi

Ger√ßek zamanlƒ± algƒ±lama i√ßin:

```bash
cd yolov5
python detect.py --weights yolov5s.pt --source 0
```

**.pt** dosyasƒ± eƒüitilmi≈ü modeli i√ßerir. **yolov5s.pt** ile insanlar, bilgisayarlar gibi √∂nceden eƒüitilmi≈ü modeller test edilir. **Teknofest Tarƒ±msal ƒ∞nsansƒ±z Aracƒ± CORE Ekibi** olarak, yabancƒ± bitki algƒ±lama ve ila√ßlama i√ßin √∂zel bir **.pt** dosyasƒ± eƒüittik (≈ûekil 31).

![≈ûekil 31: √ñzel YOLOv5 Algƒ±lama](https://github.com/Farukcinemre/JetsonNano-bootandsetup/blob/main/images/yabanci-bitki.jpg)

## üìö Kaynak√ßa

1. https://releases.ubuntu.com/18.04/
2. https://developer.nvidia.com/drive/sdk-manager  
   https://youtu.be/0nplGFQ07po
3. https://github.com/55selcukozdemir/web_self-car/blob/main/README.md
4. https://youtu.be/53rRMr1IpWs
5. https://youtu.be/oKaLyow7hWU
6. https://forums.developer.nvidia.com/t/pytorch-for-jetson/72048